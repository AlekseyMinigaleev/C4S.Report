<?xml version="1.0"?>
<doc>
    <assembly>
        <name>С4S.API</name>
    </assembly>
    <members>
        <member name="M:С4S.API.Extensions.ApplicationBuilderExtensions.InitApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication,System.Threading.CancellationToken)">
            <summary>
            Выполняет все необходимые процессы, для корректной работы приложения
            </summary>
            <remarks>
            Подразумевает в момент выполнения наличие базы данных для Hangfire
            </remarks>
        </member>
        <member name="T:С4S.API.Extensions.PrincipalExtension">
            <summary>
            Статический класс с методами-расширениями для интерфейса IPrincipal.
            </summary>
        </member>
        <member name="M:С4S.API.Extensions.PrincipalExtension.GetUserRsyaAuthorizationToken(System.Security.Principal.IPrincipal)">
            <summary>
            Получает токен авторизации для РСЯ пользователя из объекта IPrincipal.
            </summary>
            <param name="principal">Объект IPrincipal, представляющий текущего пользователя.</param>
        </member>
        <member name="M:С4S.API.Extensions.WebApplicationBuilderExtensions.BuildWithHangfireStorage(Microsoft.AspNetCore.Builder.WebApplicationBuilder,Microsoft.Extensions.Configuration.ConfigurationManager)">
            <summary>
            <inheritdoc cref="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build"/>
            </summary>
            <remarks>
            Перед созданием <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/> создает хранилище для Hangfire
            </remarks>
            <returns><inheritdoc cref="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build"/></returns>
        </member>
        <member name="P:С4S.API.Features.Authentication.Actions.CreateAccount.Query.Credentionals">
            <inheritdoc cref="T:С4S.API.Features.Authentication.ViewModels.UserCredentionals"/>
        </member>
        <member name="P:С4S.API.Features.Authentication.Actions.CreateAccount.Query.DeveloperPageUrl">
            <summary>
            ссылка на страницу разработчика
            </summary>
        </member>
        <member name="P:С4S.API.Features.Authentication.Actions.CreateAccount.Query.RsyaAuthorizationToken">
            <inheritdoc cref="P:С4S.API.Features.Authentication.Actions.CreateAccount.Query.RsyaAuthorizationToken"/>
        </member>
        <member name="P:С4S.API.Features.Authentication.Actions.Login.Query.UserCreditionals">
            <inheritdoc cref="T:С4S.API.Features.Authentication.ViewModels.UserCredentionals"/>
        </member>
        <member name="M:С4S.API.Features.Authentication.AuthenticationController.Login(С4S.API.Features.Authentication.Actions.Login.Query,FluentValidation.IValidator{С4S.API.Features.Authentication.Actions.Login.Query},System.Threading.CancellationToken)">
            <summary>
            Осуществляет аутентификацию пользователя
            </summary>
            <returns>
            Jwt-токен пользователя
            </returns>
        </member>
        <member name="T:С4S.API.Features.Authentication.ViewModels.UserCredentionals">
            <summary>
            Представляет учетные данные пользователя
            </summary>
        </member>
        <member name="P:С4S.API.Features.Authentication.ViewModels.UserCredentionals.Login">
            <summary>
            Логин пользователя
            </summary>
        </member>
        <member name="P:С4S.API.Features.Authentication.ViewModels.UserCredentionals.Password">
            <summary>
            Пароль пользователя
            </summary>
        </member>
        <member name="M:С4S.API.Features.GameStatisticReport.GameStatisticReportController.GetGameStatisticReportAsync(System.String,System.String,FluentValidation.IValidator{С4S.API.Features.GameStatisticReport.Actions.GetReportFileWithGameStatistics.Query},System.Threading.CancellationToken)">
            <summary>
            Возвращает готовый к скачиванию файл отчета игровой статистики.
            </summary>
            <remarks>
            dd.MM.yyyy
            </remarks>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.GetGames.ViewModel.GameId">
            <summary>
            Id игры
            </summary>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.GetGames.ViewModel.GameName">
            <summary>
            Навзание игры
            </summary>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.GetGames.ViewModel.PageId">
            <summary>
            Id страницы
            </summary>
            <remarks>
            Поле для взаимодействия с РСЯ
            </remarks>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.SetPageIds.Body.GameId">
            <summary>
            Id игры
            </summary>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.SetPageIds.Body.GameName">
            <summary>
            Навзание игры
            </summary>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.SetPageIds.Body.PageId">
            <summary>
            Id страницы
            </summary>
            <remarks>
            Поле для взаимодействия с РСЯ
            </remarks>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.SetPageIds.ViewModel.GameId">
            <summary>
            Id игры
            </summary>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.SetPageIds.ViewModel.GameName">
            <summary>
            Навзание игры
            </summary>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.SetPageIds.ViewModel.PageId">
            <summary>
            Id страницы
            </summary>
            <remarks>
            Поле для взаимодействия с РСЯ
            </remarks>
        </member>
        <member name="P:С4S.API.Features.Game.Actions.SetPageIds.ViewModel.IsSuccessfullySet">
            <summary>
            Флаг показывающий было ли установлено значение
            </summary>
        </member>
        <member name="M:С4S.API.Features.Game.GameController.SetPageIdsAsync(С4S.API.Features.Game.Actions.SetPageIds.Command,FluentValidation.IValidator{С4S.API.Features.Game.Actions.SetPageIds.Command},System.Threading.CancellationToken)">
            <summary>
            Устанавливает PageId для игры. ОТСТУТСТВУЕТ ВАЛИДАЦИЯ НА УСТАНОВКУ PageId ИГРЕ, КОТОРОЙ ЭТОТ PageId НЕ ПРИНАДЛЕЖИТ.
            </summary>
        </member>
        <member name="M:С4S.API.Features.Game.GameController.GetGamesAsync(System.Threading.CancellationToken)">
            <summary>
            Возвращает список всех игр
            </summary>
        </member>
        <member name="P:С4S.API.Features.User.Action.SetRsyaAuthorizationToken.Command.RsyaAythorizationToken">
            <inheritdoc cref="T:С4S.API.Features.User.Action.SetRsyaAuthorizationToken"/>
        </member>
        <member name="P:С4S.API.Features.User.Requests.RsyaAuthorizationToken.Token">
            <summary>
            Токен авторизации для апи /partner2.yandex.ru/api
            </summary>
        </member>
        <member name="M:С4S.API.Features.User.UserController.GetUserAsync(System.Threading.CancellationToken)">
            <summary>
            Возвращает данные о пользователе, отображаемые в профиле.
            </summary>
        </member>
        <member name="M:С4S.API.Features.User.UserController.SetRsyaAuthorizationTokenAsync(С4S.API.Features.User.Action.SetRsyaAuthorizationToken.Command,FluentValidation.IValidator{С4S.API.Features.User.Action.SetRsyaAuthorizationToken.Command},System.Threading.CancellationToken)">
            <summary>
            Устанавливает токен авторизации.
            https://yandex.ru/dev/partner-statistics/doc/ru/concepts/access
            </summary>
        </member>
        <member name="T:С4S.API.SettingsModels.JWTConfiguration">
            <summary>
            Конфигурация JWT токена
            </summary>
        </member>
        <member name="P:С4S.API.SettingsModels.JWTConfiguration.SecurityKey">
            <summary>
            Секретный ключ
            </summary>
        </member>
        <member name="P:С4S.API.SettingsModels.JWTConfiguration.Issuer">
            <summary>
            Издатель
            </summary>
        </member>
        <member name="P:С4S.API.SettingsModels.JWTConfiguration.Audience">
            <summary>
            Аудитория для коотрой предназначен токен
            </summary>
        </member>
        <member name="P:С4S.API.SettingsModels.JWTConfiguration.DurationInMinutes">
            <summary>
            Срок жизни токена
            </summary>
        </member>
        <member name="M:С4S.API.SettingsModels.JWTConfiguration.GetSymmetricSecurityKey">
            <summary>
            Создает объект типа <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey"/>, по установленному <see cref="P:С4S.API.SettingsModels.JWTConfiguration.SecurityKey"/>
            </summary>
        </member>
        <member name="F:С4S.API.SettingsModels.JWTConfiguration.AuthenticationType">
            <summary>
            Тип аутентификации
            </summary>
        </member>
        <member name="M:C4S.API.Extensions.ServiceCollectionExtensions.AddStorages(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.ConfigurationManager)">
            <summary>
            Добавляет все необходимые сервисы для хранилищ
            </summary>
        </member>
        <member name="P:C4S.API.Features.Jobs.Actions.GetJobs.ResponseViewModel.Name">
            <summary>
            Название джобы
            </summary>
        </member>
        <member name="P:C4S.API.Features.Jobs.Actions.GetJobs.ResponseViewModel.JobType">
            <summary>
            Тип джобы
            </summary>
        </member>
        <member name="P:C4S.API.Features.Jobs.Actions.GetJobs.ResponseViewModel.CronExpression">
            <summary>
            cron выражение
            </summary>
        </member>
        <member name="P:C4S.API.Features.Jobs.Actions.GetJobs.ResponseViewModel.IsEnable">
            <summary>
            статус джобы
            </summary>
        </member>
        <member name="P:C4S.API.Features.Jobs.Actions.UpdateJobs.Command.UpdatedJobs">
            <summary>
            <see cref="T:C4S.DB.Models.Hangfire.HangfireJobConfigurationModel"/>[] с обновленными полями
            </summary>
        </member>
        <member name="P:C4S.API.Features.Jobs.Actions.UpdateJobs.ResponseViewModel.JobType">
            <summary>
            тип джобы
            </summary>
        </member>
        <member name="P:C4S.API.Features.Jobs.Actions.UpdateJobs.ResponseViewModel.Error">
            <summary>
            Текст возможной ошибки при обновлении HangfireConfigurationModel
            </summary>
        </member>
        <member name="M:C4S.API.Features.Jobs.JobController.GetJobsAsync(System.Threading.CancellationToken)">
            <summary>
             Выдает конфигурации всех запланированных джоб.
            </summary>
        </member>
        <member name="M:C4S.API.Features.Jobs.JobController.UpdateJobsAsync(C4S.API.Features.Jobs.Actions.UpdateJobs.Command,FluentValidation.IValidator{C4S.API.Features.Jobs.Actions.UpdateJobs.Command},System.Threading.CancellationToken)">
            <summary>
            Выполняет обновление конфигураций всех запланированных джоб.
            </summary>
        </member>
        <member name="M:C4S.API.Features.Jobs.JobController.OweriteJobsAsyc(System.Threading.CancellationToken)">
            <summary>
            Запускает процесс перезаписи всех джоб в hangfire базе данных
            </summary>
        </member>
    </members>
</doc>
